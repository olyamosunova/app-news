{"version":3,"sources":["const.js","utils.js","reducer/reducer.js","reducer/selectors.js","components/loader/loader.js","components/modal/Modal.js","components/main/Main.js","components/comment/comment.js","components/comments-list/Comments-list.js","components/comments/comments.js","components/story/Story.js","components/app/App.js","index.js"],"names":["BASE_API_URL","extend","a","b","Object","assign","loadStory","id","axios","get","story","data","console","log","loadStories","storyIds","Promise","all","slice","map","stories","loadComment","comment","loadComments","commentIds","comments","getDate","date","format","Date","initialState","isLoading","errorMessage","ActionType","ActionCreator","type","payload","flag","message","Operations","dispatch","then","catch","res","getStories","state","getIsLoading","getErrorMessage","getStory","getComments","Loader","className","Spinner","animation","ModalBlock","useDispatch","resetErrorMessage","useEffect","timer","clearTimeout","setTimeout","Modal","Dialog","Body","Main","useSelector","Button","variant","onClick","disabled","Table","striped","bordered","hover","style","backgroundColor","colSpan","align","to","title","score","by","time","Comment","kids","commentsLength","length","useState","setComments","isShowCommentsNumber","setIsShowCommentsNumber","dangerouslySetInnerHTML","__html","text","CommentsList","Comments","newCommentsList","filter","deleted","Story","href","url","App","path","component","exact","render","match","Number","params","renderStoryPage","store","createStore","action","storyId","find","composeWithDevTools","applyMiddleware","thunk","clearInterval","setInterval","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.46dc7295.chunk.js","sourcesContent":["export const BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\r\n","import axios from \"axios\";\r\nimport {BASE_API_URL} from \"./const\";\r\nimport {format} from \"date-fns\";\r\nimport {ActionCreator} from \"./reducer/reducer\";\r\n\r\nexport const extend = (a, b) => {\r\n    return Object.assign({}, a, b);\r\n};\r\n\r\nexport const loadStory = async (id) => {\r\n    try {\r\n        const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\r\n        return story.data;\r\n    } catch (error) {\r\n        console.log('Error while getting a story.');\r\n    }\r\n};\r\n\r\nexport const loadStories = async () => {\r\n    try {\r\n        const { data: storyIds } = await axios.get(\r\n            `${BASE_API_URL}/newstories.json`\r\n        );\r\n        const stories = await Promise.all(storyIds.slice(0, 100).map(loadStory));\r\n        return stories;\r\n    } catch (error) {\r\n        console.log('Error while getting list of stories.');\r\n    }\r\n};\r\n\r\nexport const loadComment = async (id) => {\r\n    try {\r\n        const comment = await axios.get(`${BASE_API_URL}/item/${id}.json`);\r\n        return comment.data;\r\n    } catch (error) {\r\n        console.log('Error while getting a comment.');\r\n    }\r\n};\r\n\r\nexport const loadComments = async (commentIds) => {\r\n    try {\r\n        const comments = await Promise.all(commentIds.slice(0, 100).map(loadComment));\r\n        return comments;\r\n    } catch (error) {\r\n        console.log('Error while getting list of comments.');\r\n    }\r\n}\r\n\r\nexport const getDate = (date) => {\r\n    return format(new Date(date * 1000), 'dd MMMM yyyy hh:mm');\r\n};\r\n","import {extend, loadStories, loadComment} from \"../utils\";\r\n\r\nconst initialState = {\r\n    stories: [],\r\n    isLoading: true,\r\n    errorMessage: '',\r\n    story: null,\r\n    comments: []\r\n};\r\n\r\nconst ActionType = {\r\n    LOAD_STORIES: `LOAD_STORIES`,\r\n    CHANGE_IS_LOADED_FLAG: `CHANGE_IS_LOADED_FLAG`,\r\n    SET_ERROR_MESSAGE: `SET_ERROR_MESSAGE`,\r\n    GET_STORY: `GET_STORY`,\r\n    LOAD_COMMENTS: `LOAD_COMMENTS`\r\n};\r\n\r\nconst ActionCreator = {\r\n    loadStories: (stories) => {\r\n        return {\r\n            type: ActionType.LOAD_STORIES,\r\n            payload: stories,\r\n        };\r\n    },\r\n    changeIsLoadedFlag: (flag) => {\r\n        return {\r\n            type: ActionType.CHANGE_IS_LOADED_FLAG,\r\n            payload: flag,\r\n        };\r\n    },\r\n    setErrorMessage: (message) => {\r\n        return {\r\n            type: ActionType.SET_ERROR_MESSAGE,\r\n            payload: message,\r\n        };\r\n    },\r\n    getStory: (id) => {\r\n        return {\r\n            type: ActionType.GET_STORY,\r\n            payload: id,\r\n        };\r\n    },\r\n    loadComments: (comments) => {\r\n        return {\r\n            type: ActionType.LOAD_COMMENTS,\r\n            payload: comments,\r\n        };\r\n    }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionType.LOAD_STORIES:\r\n            return extend(state, {\r\n                stories: action.payload\r\n            });\r\n\r\n        case ActionType.CHANGE_IS_LOADED_FLAG:\r\n            return extend(state, {\r\n                isLoading: action.payload\r\n            });\r\n\r\n        case ActionType.SET_ERROR_MESSAGE:\r\n            return extend(state, {\r\n                errorMessage: action.payload\r\n            });\r\n\r\n        case ActionType.GET_STORY:\r\n            const storyId = action.payload;\r\n            const story = state.stories.find(story => story.id === storyId);\r\n\r\n            return extend(state, {\r\n                story\r\n            });\r\n\r\n        case ActionType.LOAD_COMMENTS:\r\n            return extend(state, {\r\n                comments: action.payload\r\n            });\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst Operations = {\r\n    loadStories: () => (dispatch) => {\r\n        loadStories()\r\n            .then(stories => {\r\n                dispatch(ActionCreator.loadStories(stories));\r\n                dispatch(ActionCreator.changeIsLoadedFlag(false));\r\n                dispatch(ActionCreator.setErrorMessage(''));\r\n            })\r\n            .catch(() => {\r\n                dispatch(ActionCreator.changeIsLoadedFlag(false));\r\n                dispatch(ActionCreator.setErrorMessage('Не удалось загрузить новости!'));\r\n            });\r\n    },\r\n    loadComments: (commentIds) => (dispatch) => {\r\n        Promise.all(commentIds.slice(0, 100).map(loadComment))\r\n            .then(res => {\r\n                dispatch(ActionCreator.loadComments(res));\r\n            })\r\n            .catch(() => {\r\n                console.log('Error while getting list of comments.');\r\n            });\r\n    }\r\n};\r\n\r\n\r\nexport {reducer, ActionType, ActionCreator, Operations};\r\n","export const getStories = (state) => state.stories;\r\nexport const getIsLoading = (state) => state.isLoading;\r\nexport const getErrorMessage = (state) => state.errorMessage;\r\nexport const getStory = (state) => state.story;\r\nexport const getComments = (state) => state.comments;\r\n\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spinner animation=\"border\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, {useEffect} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ActionCreator} from \"../../reducer/reducer\";\r\nimport \"./Modal.scss\";\r\n\r\nconst ModalBlock = ({message}) => {\r\n    const dispatch = useDispatch();\r\n    const resetErrorMessage = () => dispatch(ActionCreator.setErrorMessage(''));\r\n\r\n    useEffect(() => {\r\n        let timer = null;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(resetErrorMessage, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <Modal.Dialog>\r\n            <Modal.Body>\r\n                <p>{message}</p>\r\n            </Modal.Body>\r\n        </Modal.Dialog>\r\n    );\r\n};\r\n\r\nexport default ModalBlock;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getStories, getIsLoading, getErrorMessage} from \"../../reducer/selectors\";\r\nimport Loader from \"../loader/loader\";\r\nimport {Operations, ActionCreator} from \"../../reducer/reducer\";\r\nimport \"./Main.css\";\r\nimport ModalBlock from \"../modal/Modal\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getDate} from \"../../utils\";\r\n\r\nconst Main = () => {\r\n    const stories = useSelector(getStories);\r\n    const isLoading = useSelector(getIsLoading);\r\n    const errorMessage = useSelector(getErrorMessage);\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(stories);\r\n\r\n    const handlerLoadStories = () => {\r\n        dispatch(ActionCreator.changeIsLoadedFlag(true));\r\n        dispatch(Operations.loadStories());\r\n    };\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            <Button className=\"main__button\" variant=\"primary\" onClick={handlerLoadStories} disabled={isLoading}>Update stories list</Button>\r\n\r\n            <Table className=\"main__table\" striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <td>Title</td>\r\n                    <td>Score</td>\r\n                    <td>Author</td>\r\n                    <td>Date</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    isLoading ?\r\n                        <tr style={{backgroundColor: '#ffffff'}}>\r\n                            <td colSpan=\"4\" align=\"center\"><Loader/></td>\r\n                        </tr>\r\n                        :\r\n                        stories\r\n                            ? stories.map(story => {\r\n                                return story ? <tr key={story.id}>\r\n                                    <td>\r\n                                        <Link to={`/story/${story.id}`} >{story.title}</Link>\r\n                                    </td>\r\n                                    <td>{story.score ? story.score : '0'}</td>\r\n                                    <td>{story.by}</td>\r\n                                    <td>{getDate(story.time)}</td>\r\n                                </tr> : null\r\n                            })\r\n                            :\r\n                            <tr style={{backgroundColor: '#ffffff'}}>\r\n                                <td colSpan=\"4\" align=\"center\">Нет новостей</td>\r\n                            </tr>\r\n\r\n                }\r\n                </tbody>\r\n            </Table>\r\n\r\n            {errorMessage ?\r\n                <ModalBlock message={errorMessage} /> : null\r\n            }\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, {useState} from \"react\";\r\nimport {getDate} from \"../../utils\";\r\nimport CommentsList from \"../comments-list/Comments-list\";\r\nimport {loadComments} from \"../../utils\";\r\n\r\nconst Comment = ({comment}) => {\r\n    const {kids} = comment;\r\n    const commentsLength = kids ? kids.length : null;\r\n    const [comments, setComments] = useState([]);\r\n    const [isShowCommentsNumber, setIsShowCommentsNumber] = useState(true);\r\n\r\n\r\n    const handlerUploadComments = () => {\r\n        if (commentsLength) {\r\n            loadComments(kids).then(res => {\r\n                setComments(res);\r\n                setIsShowCommentsNumber(false);\r\n            });\r\n        }\r\n    };\r\n\r\n  return (\r\n      <li className=\"comments__item\">\r\n          <div className=\"comments__item-header\">\r\n              <p className=\"comments__item-author\">{comment.by}</p>\r\n              <span className=\"comments__item-date\">{getDate(comment.time)}</span>\r\n          </div>\r\n\r\n          <div className=\"comments__item-body\">\r\n              <p className=\"comments__item-text\" dangerouslySetInnerHTML={{__html: comment.text}}></p>\r\n          </div>\r\n\r\n          {\r\n              commentsLength && isShowCommentsNumber ?\r\n                  <div className=\"comments__item-footer\">\r\n                      <button onClick={() => handlerUploadComments()} className=\"comments__item-btn\" type=\"button\">Комментрии ({commentsLength})</button>\r\n                  </div>\r\n                  : null\r\n          }\r\n\r\n\r\n\r\n          {commentsLength ? <CommentsList comments={comments} /> : null}\r\n      </li>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport Comment from \"../comment/comment\";\r\n\r\nconst CommentsList = ({comments}) => {\r\n    return (\r\n        <ul className=\"comments__list\">\r\n            {\r\n                comments.map(comment => {\r\n                    return <Comment key={comment.id} comment={comment}/>\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\nimport \"./Comments.scss\";\r\nimport CommentsList from \"../comments-list/Comments-list\";\r\n\r\nconst Comments = ({comments}) => {\r\n    const newCommentsList = comments.filter(comment => !comment.deleted);\r\n\r\n    return (\r\n        <div className=\"story__comments comments\">\r\n            <p className=\"comments__title\">Comments <span>({newCommentsList.length})</span></p>\r\n\r\n            <CommentsList comments={newCommentsList} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getComments, getStory} from \"../../reducer/selectors\";\r\nimport {getDate} from \"../../utils\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./story.scss\";\r\nimport Comments from \"../comments/comments\";\r\nimport {Operations} from \"../../reducer/reducer\";\r\n\r\nconst Story = () => {\r\n    const story = useSelector(getStory);\r\n    const dispatch = useDispatch();\r\n    const comments = useSelector(getComments);\r\n    const { kids } = story;\r\n    const commentsLength = kids ? kids.length : null;\r\n\r\n    useEffect(() => {\r\n        if (kids && kids.length) {\r\n            dispatch(Operations.loadComments(kids));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"story\">\r\n            <Link className=\"story__return\" to=\"/\">Return to stories list</Link>\r\n            <article className=\"story__item\">\r\n                <div className=\"story__header\">\r\n                    <span className=\"story__date\">{getDate(story.time)}</span>\r\n                    <p className=\"story__author\">Author: <span>{story.by}</span></p>\r\n                    <a className=\"story__source\" href={story.url}>Source</a>\r\n                </div>\r\n\r\n                <div className=\"story__body\">\r\n                    <h2 className=\"story__title\">{story.title}</h2>\r\n\r\n                    {\r\n                        commentsLength ? <Comments comments={comments} /> : <p>Нет комментариев</p>\r\n                    }\r\n\r\n                </div>\r\n            </article>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Main from \"../main/Main\";\nimport Story from \"../story/Story\";\nimport {useDispatch} from \"react-redux\";\nimport {ActionCreator} from \"../../reducer/reducer\";\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const renderStoryPage = (match) => {\n        const id = Number(match.params.id);\n        dispatch(ActionCreator.getStory(id));\n\n        return (\n            <Story />\n        );\n    };\n\n  return (\n      <BrowserRouter>\n          <div className=\"container\">\n              <Switch>\n                  <Route path=\"/\" component={Main} exact={true} />\n                  <Route\n                      exact path={`/story/:id`}\n                      render={({match}) => renderStoryPage(match)}\n                  />\n              </Switch>\n          </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {reducer} from \"./reducer/reducer\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/App';\nimport {Operations} from \"./reducer/reducer\";\n\nconst store = createStore(reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    ));\n\nstore.dispatch(Operations.loadStories());\n\nlet timer = null;\nclearInterval(timer);\ntimer = setInterval(() => {\n    store.dispatch(Operations.loadStories());\n}, 60000);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}